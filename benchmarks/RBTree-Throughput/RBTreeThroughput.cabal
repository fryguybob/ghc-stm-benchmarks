name:           rbtree-throughput
version:        0.1.0.0
license-file:   LICENSE
author:         Ryan Yates
maintainer:     ryates@cs.rochester.edu
build-type:     Simple
cabal-version:  >=1.10

-- RBTree
flag rbtreetvar
    description: Build with RBTree TVars.
    default:     False
flag rbtreemutsingle
    description: Build with mutable fields red-black tree in IO (single thread only).
    default:     False
flag rbtreemutustm
    description: Build with mutable fields red-black tree in STM and unboxed color.
    default:     False
flag rbtreemutstm
    description: Build with mutable fields red-black tree in STM.
    default:     False
flag rbtreeioref
    description: Build with IORef red-black tree (single thread only).
    default:     False
flag rbtreetstruct
    description: Build with TStruct support.
    default:     False
flag rbtreemuttvarcolor
    description: Build with mutable fields red-black tree in STM with color stored in a TVar.
    default:     False
-- Cuckoo
flag cuckootvar
    description: Build with Cuckoo hash map.
    default:     False
flag cuckootvarsimple
    description: Build with Cuckoo hash map.
    default:     False
flag cuckootstruct
    description: Build with Cuckoo hash map.
    default:     False
flag cuckootstructint
    description: Build with Cuckoo hash map.
    default:     False
-- SkipList
flag skiplist
    description: Build with SkipList based map.
    default:     False
flag skiplisttstruct
    description: Build with SkipList based map with TStruct support.
    default:     False
-- HAMT
flag hamt
    description: Build with stm-containers trie.
    default:     False
flag hamttstruct
    description: Build with stm-containers trie.
    default:     False
flag hamtmut
    description: Build with stm-containers trie.
    default:     False
-- Treap
flag treapmutsingle
    description: Build with Treap based map, mutable fields, single threaded.
    default:     False
flag treapioref
    description: Build with Treap based map, IORef fields, single threaded.
    default:     False
flag treapmutstm
    description: Build with Treap based map, mutable fields, STM.
    default:     False
flag treapmutstmcps
    description: Build with Treap based map, mutable fields, STM, using a continuation action argument instead of tuple returns.
    default:     False
flag treapmutstmref
    description: Build with Treap based map, mutable fields, STM, using ref arguments instead of tuple returns.
    default:     False
flag treaptvar
    description: Build with Treap based map, TVar, STM.
    default:     False
-- Other
flag ctrie
    description: Build with concurrent trie.
    default:     False
flag hashmap
    description: Build with HashMap from unordered-containers.
    default:     False
flag hashmapcas
    description: Build with HashMap from unordered-containers and CAS from atomic-primops.
    default:     False
flag hashmaptvar
    description: Build with HashMap from unordered-containers and use a TVar as an atomic box.
    default:     False
flag hashmapmvar
    description: Build with HashMap from unordered-containers and use a TMVar as an atomic box.
    default:     False
flag hashmaptmvar
    description: Build with HashMap from unordered-containers and use a MVar as an atomic box.
    default:     False

executable rbtree-throughput
  main-is:      Main.hs
--  GHC-Options:  -rtsopts -threaded -O0 -fno-omit-yields -dumpdir mut-dump -ddump-simpl -ddump-cmm -ddump-to-file
--  GHC-Options:  -rtsopts -threaded -O1 -fno-omit-yields -dumpdir mut-dump -ddump-simpl -ddump-cmm -ddump-to-file
  GHC-Options:  -rtsopts -threaded -O2 -fno-omit-yields -msse4.2
--  GHC-Options:  -rtsopts -threaded -debug -O1 -fno-omit-yields -msse4.2 -with-rtsopts=-V0
--  GHC-Options:  -rtsopts -threaded -debug -fno-omit-yields -msse4.2
  build-depends:    base >= 4.7,
                    ghc-prim,
                    stm,
                    optparse-applicative < 0.13,
                    throughput,
                    pcg-random
-- RBTree
  if flag(rbtreetvar)
    cpp-options:   -DRBTREE_TVAR
  if flag(rbtreetstruct)
    cpp-options:   -DRBTREE_TSTRUCT
  if flag(rbtreemutsingle)
    cpp-options:   -DRBTREE_MUT_SINGLE
  if flag(rbtreemutustm)
    cpp-options:   -DRBTREE_MUT_U_STM
  if flag(rbtreemutstm)
    cpp-options:   -DRBTREE_MUT_STM
  if flag(rbtreeioref)
    cpp-options:   -DRBTREE_IOREF
  if flag(rbtreemuttvarcolor)
    cpp-options:   -DRBTREE_MUT_TVAR_COLOR
-- Cuckoo
  if flag(cuckootvar)
    cpp-options:   -DCUCKOOTVAR       -DCUCKOO
    build-depends: array
  if flag(cuckootvarsimple)
    cpp-options:   -DCUCKOOTVARSIMPLE -DCUCKOO
    build-depends: array
  if flag(cuckootstruct)
    cpp-options:   -DCUCKOOTSTRUCT    -DCUCKOO
  if flag(cuckootstructint)
    cpp-options:   -DCUCKOOTSTRUCTINT -DCUCKOO
-- SkipList
  if flag(skiplist)
    cpp-options:   -DSKIPLIST
    build-depends: array, vector
  if flag(skiplisttstruct)
    cpp-options:   -DSKIPLIST -DSKIPLIST_TSTRUCT
    build-depends: array, vector
-- HAMT
  if flag(hamt)
    cpp-options:   -DSTMTRIE
    build-depends: stm-containers
  if flag(hamttstruct)
    cpp-options:   -DSTMTRIE -DSTMTRIE_TSTRUCT
    build-depends: stm-containers
  if flag(hamtmut)
    cpp-options:   -DSTMTRIE -DSTMTRIE_MUT
    build-depends: stm-containers
-- Treap
  if flag(treapmutsingle)
    cpp-options:   -DTREAP -DTREAP_MUT_SINGLE
    build-depends: array, vector
  if flag(treapioref)
    cpp-options:   -DTREAP -DTREAP_IOREF
    build-depends: array, vector
  if flag(treapmutstm)
    cpp-options:   -DTREAP -DTREAP_MUT_STM
    build-depends: array, vector
  if flag(treapmutstmcps)
    cpp-options:   -DTREAP -DTREAP_MUT_STM -DTREAP_MUT_STM_CPS
    build-depends: array, vector
  if flag(treapmutstmref)
    cpp-options:   -DTREAP -DTREAP_MUT_STM -DTREAP_MUT_STM_REF
    build-depends: array, vector
  if flag(treaptvar)
    cpp-options:   -DTREAP -DTREAP_TVAR
    build-depends: array, vector
-- Other
  if flag(ctrie)
    cpp-options:   -DCTRIE
    build-depends: ctrie
  if flag(hashmap)
    cpp-options:   -DHASHMAP
    build-depends: unordered-containers
  if flag(hashmapcas)
    cpp-options:   -DHASHMAP -DCAS
    build-depends: unordered-containers, atomic-primops
  if flag(hashmaptvar)
    cpp-options:   -DHASHMAP -DTVARBOX
    build-depends: unordered-containers
  if flag(hashmaptmvar)
    cpp-options:   -DHASHMAP -DTMVARBOX
    build-depends: unordered-containers
  if flag(hashmapmvar)
    cpp-options:   -DHASHMAP -DMVARBOX
    build-depends: unordered-containers

  default-language: Haskell2010
